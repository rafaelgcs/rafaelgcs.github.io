{"version":3,"sources":["components/Footer/index.tsx","components/PageTitleWrapper/index.tsx","components/Label/index.tsx","content/applications/Transactions/PageHeader.tsx","content/applications/Transactions/BulkActions.tsx","content/applications/Transactions/RecentOrdersTable.tsx","content/applications/Transactions/RecentOrders.tsx","content/applications/Transactions/index.tsx"],"names":["FooterWrapper","styled","Box","theme","spacing","Footer","maxWidth","py","display","xs","md","alignItems","textAlign","justifyContent","variant","sx","pt","href","target","rel","PageTitle","PageTitleWrapper","children","LabelWrapper","colors","alpha","black","typography","pxToRem","general","borderRadius","primary","lighter","palette","main","secondary","success","warning","error","info","Label","className","color","rest","PageHeader","Grid","container","item","Typography","component","gutterBottom","Button","mt","startIcon","fontSize","ButtonError","contrastText","dark","BulkActions","useState","onMenuOpen","menuOpen","moreRef","useRef","ml","IconButton","onClick","ref","p","Menu","keepMounted","anchorEl","current","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List","ListItem","button","ListItemText","getStatusLabel","cryptoOrderStatus","failed","text","completed","pending","RecentOrdersTable","cryptoOrders","selectedCryptoOrders","setSelectedCryptoOrders","selectedBulkActions","length","page","setPage","limit","setLimit","status","filters","setFilters","filteredCryptoOrders","filter","cryptoOrder","matches","applyFilters","paginatedCryptoOrders","slice","applyPagination","selectedSomeCryptoOrders","selectedAllCryptoOrders","useTheme","Card","flex","CardHeader","action","width","FormControl","fullWidth","InputLabel","Select","value","onChange","e","prevFilters","label","autoWidth","id","name","map","statusOption","MenuItem","title","Divider","TableContainer","Table","TableHead","TableRow","TableCell","padding","Checkbox","checked","indeterminate","event","align","TableBody","isCryptoOrderSelected","includes","hover","selected","cryptoOrderId","prevSelected","fontWeight","noWrap","orderDetails","format","orderDate","orderID","sourceName","sourceDesc","amountCrypto","cryptoCurrency","numeral","amount","currency","Tooltip","arrow","background","size","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","RecentOrders","Date","getTime","subDays","ApplicationsTransactions","Container","direction"],"mappings":"uHAAA,sDAGMA,EAAgBC,YAAOC,IAAPD,EACpB,gBAAGE,EAAH,EAAGA,MAAH,6DAEgBA,EAAMC,QAAQ,GAF9B,YA+BaC,IAzBf,WACE,OACE,cAACL,EAAD,UACE,cAAC,IAAD,CAAWM,SAAS,KAApB,SACE,eAAC,IAAD,CACEC,GAAI,EACJC,QAAS,CAAEC,GAAI,QAASC,GAAI,QAC5BC,WAAW,SACXC,UAAW,CAAEH,GAAI,SAAUC,GAAI,QAC/BG,eAAe,gBALjB,UAOE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYC,QAAQ,YAApB,+CAIF,eAAC,IAAD,CAAYC,GAAI,CAAEC,GAAI,CAAEP,GAAI,EAAGC,GAAI,IAAOI,QAAQ,YAAlD,wBACa,cAAC,IAAD,CAAMG,KAAK,wBAAwBC,OAAO,SAASC,IAAI,sBAAvD,wBADb,UACkH,cAAC,IAAD,CAAMF,KAAK,mEAAmEC,OAAO,SAASC,IAAI,sBAAlG,0C,iCC1B5H,oCAKMC,EAAYnB,YAAOC,IAAPD,EAChB,gBAAGE,EAAH,EAAGA,MAAH,mCACiBA,EAAMC,QAAQ,EAAG,GADlC,UAyBaiB,IAhBqC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrD,OACE,mCACE,cAACF,EAAD,UACE,cAAC,IAAD,CAAWd,SAAS,KAApB,SACGgB,U,uGCXLC,EAAetB,YAAO,OAAPA,EACnB,gBAAGE,EAAH,EAAGA,MAAH,0CACwBA,EAAMqB,OAAOC,MAAMC,MAAM,GADjD,6BAEevB,EAAMC,QAAQ,GAAK,GAFlC,+BAGiBD,EAAMwB,WAAWC,QAAQ,IAH1C,mCAIqBzB,EAAM0B,QAAQC,aAJnC,yHAQkB3B,EAAMC,QAAQ,GARhC,2FAY4BD,EAAMqB,OAAOO,QAAQC,QAZjD,+BAaiB7B,EAAM8B,QAAQF,QAAQG,KAbvC,qFAiB4B/B,EAAMqB,OAAOW,UAAUH,QAjBnD,+BAkBiB7B,EAAM8B,QAAQE,UAAUD,KAlBzC,mFAsB4B/B,EAAMqB,OAAOY,QAAQJ,QAtBjD,+BAuBiB7B,EAAM8B,QAAQG,QAAQF,KAvBvC,mFA2B4B/B,EAAMqB,OAAOa,QAAQL,QA3BjD,+BA4BiB7B,EAAM8B,QAAQI,QAAQH,KA5BvC,uFAgC4B/B,EAAMqB,OAAOc,MAAMN,QAhC/C,+BAiCiB7B,EAAM8B,QAAQK,MAAMJ,KAjCrC,gFAqC4B/B,EAAMqB,OAAOe,KAAKP,QArC9C,+BAsCiB7B,EAAM8B,QAAQM,KAAKL,KAtCpC,6BAsEaM,IA1Be,SAAC,GAKzB,EAJJC,UAIK,IAAD,IAHJC,aAGI,MAHI,YAGJ,EAFJpB,EAEI,EAFJA,SACGqB,EACC,iBACJ,OACE,cAACpB,EAAD,yBAAckB,UAAW,YAAcC,GAAWC,GAAlD,aACGrB,O,yGC7BQsB,MA9Bf,WAOE,OACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACjC,eAAe,gBAAgBF,WAAW,SAA1D,UACE,eAACkC,EAAA,EAAD,CAAME,MAAI,EAAV,UACE,cAACC,EAAA,EAAD,CAAYlC,QAAQ,KAAKmC,UAAU,KAAKC,cAAY,EAApD,0BAGA,eAACF,EAAA,EAAD,CAAYlC,QAAQ,YAApB,UATE,iBASF,6CAIF,cAAC+B,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACI,EAAA,EAAD,CACEpC,GAAI,CAAEqC,GAAI,CAAE3C,GAAI,EAAGC,GAAI,IACvBI,QAAQ,YACRuC,UAAW,cAAC,IAAD,CAAgBC,SAAS,UAHtC,sC,yWCLFC,EAActD,YAAOkD,IAAPlD,EAClB,gBAAGE,EAAH,EAAGA,MAAH,mCACiBA,EAAMqB,OAAOc,MAAMJ,KADpC,0BAEY/B,EAAM8B,QAAQK,MAAMkB,aAFhC,oDAKoBrD,EAAMqB,OAAOc,MAAMmB,KALvC,sBA2EaC,MAjEf,WACE,MAA+BC,oBAAkB,GAAjD,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAUC,iBAAiC,MAUjD,OACE,qCACE,eAAC7D,EAAA,EAAD,CAAKM,QAAQ,OAAOG,WAAW,SAASE,eAAe,gBAAvD,UACE,eAACX,EAAA,EAAD,CAAKM,QAAQ,OAAOG,WAAW,SAA/B,UACE,cAACqC,EAAA,EAAD,CAAYlC,QAAQ,KAAK4B,MAAM,iBAA/B,2BAGA,cAACa,EAAD,CACExC,GAAI,CAAEiD,GAAI,GACVX,UAAW,cAAC,IAAD,IACXvC,QAAQ,YAHV,uBAQF,cAACmD,EAAA,EAAD,CACEvB,MAAM,UACNwB,QAzBS,WACfL,GAAS,IAyBHM,IAAKL,EACL/C,GAAI,CAAEiD,GAAI,EAAGI,EAAG,GAJlB,SAME,cAAC,IAAD,SAIJ,cAACC,EAAA,EAAD,CACEC,aAAW,EACXC,SAAUT,EAAQU,QAClBC,KAAMb,EACNc,QAjCY,WAChBb,GAAS,IAiCLc,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,UAXhB,SAeE,eAACE,EAAA,EAAD,CAAMhE,GAAI,CAAEqD,EAAG,GAAKnB,UAAU,MAA9B,UACE,cAAC+B,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,cAACC,EAAA,EAAD,CAAcnD,QAAQ,2BAExB,cAACiD,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,cAACC,EAAA,EAAD,CAAcnD,QAAQ,kCC3C5BoD,GAAiB,SAACC,GACtB,IAeA,EAfY,CACVC,OAAQ,CACNC,KAAM,SACN5C,MAAO,SAET6C,UAAW,CACTD,KAAM,YACN5C,MAAO,WAET8C,QAAS,CACPF,KAAM,UACN5C,MAAO,YAIsB0C,GAAzBE,EAAR,EAAQA,KAAM5C,EAAd,EAAcA,MAEd,OAAO,cAACF,EAAA,EAAD,CAAOE,MAAOA,EAAd,SAAsB4C,KA0BzBG,GAAgD,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEvD,EAAwD/B,mBACtD,IADF,mBAAOgC,EAAP,KAA6BC,EAA7B,KAGMC,EAAsBF,EAAqBG,OAAS,EAC1D,EAAwBnC,mBAAiB,GAAzC,mBAAOoC,EAAP,KAAaC,EAAb,KACA,EAA0BrC,mBAAiB,GAA3C,mBAAOsC,EAAP,KAAcC,EAAd,KACA,EAA8BvC,mBAAkB,CAC9CwC,OAAQ,OADV,mBAAOC,EAAP,KAAgBC,EAAhB,KAsEMC,EArGa,SACnBZ,EACAU,GAEA,OAAOV,EAAaa,QAAO,SAACC,GAC1B,IAAIC,GAAU,EAMd,OAJIL,EAAQD,QAAUK,EAAYL,SAAWC,EAAQD,SACnDM,GAAU,GAGLA,KA0FoBC,CAAahB,EAAcU,GAClDO,EAvFgB,SACtBjB,EACAK,EACAE,GAEA,OAAOP,EAAakB,MAAMb,EAAOE,EAAOF,EAAOE,EAAQA,GAkFzBY,CAC5BP,EACAP,EACAE,GAEIa,EACJnB,EAAqBG,OAAS,GAC9BH,EAAqBG,OAASJ,EAAaI,OACvCiB,EACJpB,EAAqBG,SAAWJ,EAAaI,OACzC3F,EAAQ6G,cAEd,OACE,eAACC,EAAA,EAAD,WACGpB,GACC,cAAC3F,EAAA,EAAD,CAAKgH,KAAM,EAAG9C,EAAG,EAAjB,SACE,cAAC,EAAD,OAGFyB,GACA,cAACsB,EAAA,EAAD,CACEC,OACE,cAAClH,EAAA,EAAD,CAAKmH,MAAO,IAAZ,SACE,eAACC,EAAA,EAAD,CAAaC,WAAS,EAACzG,QAAQ,WAA/B,UACE,cAAC0G,EAAA,EAAD,qBACA,cAACC,EAAA,EAAD,CACEC,MAAOtB,EAAQD,QAAU,MACzBwB,SA3EW,SAACC,GAC1B,IAAIF,EAAQ,KAEW,QAAnBE,EAAE1G,OAAOwG,QACXA,EAAQE,EAAE1G,OAAOwG,OAGnBrB,GAAW,SAACwB,GAAD,mBAAC,eACPA,GADM,IAET1B,OAAQuB,QAmEII,MAAM,SACNC,WAAS,EAJX,SA5FQ,CACpB,CACEC,GAAI,MACJC,KAAM,OAER,CACED,GAAI,YACJC,KAAM,aAER,CACED,GAAI,UACJC,KAAM,WAER,CACED,GAAI,SACJC,KAAM,WAmFqBC,KAAI,SAACC,GAAD,OACjB,cAACC,EAAA,EAAD,CAAgCV,MAAOS,EAAaH,GAApD,SACGG,EAAaF,MADDE,EAAaH,cAQtCK,MAAM,kBAGV,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,QAAQ,WAAnB,SACE,cAACC,EAAA,EAAD,CACEnG,MAAM,UACNoG,QAAS/B,EACTgC,cAAejC,EACfa,SAxFoB,SAClCqB,GAEApD,EACEoD,EAAM9H,OAAO4H,QACTpD,EAAawC,KAAI,SAAC1B,GAAD,OAAiBA,EAAYwB,MAC9C,SAqFI,cAACW,EAAA,EAAD,4BACA,cAACA,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,CAAWM,MAAM,QAAjB,oBACA,cAACN,EAAA,EAAD,CAAWM,MAAM,QAAjB,oBACA,cAACN,EAAA,EAAD,CAAWM,MAAM,QAAjB,0BAGJ,cAACC,EAAA,EAAD,UACGvC,EAAsBuB,KAAI,SAAC1B,GAC1B,IAAM2C,EAAwBxD,EAAqByD,SACjD5C,EAAYwB,IAEd,OACE,eAACU,EAAA,EAAD,CACEW,OAAK,EAELC,SAAUH,EAHZ,UAKE,cAACR,EAAA,EAAD,CAAWC,QAAQ,WAAnB,SACE,cAACC,EAAA,EAAD,CACEnG,MAAM,UACNoG,QAASK,EACTxB,SAAU,SAACqB,GAAD,OAtG5BO,EAuGsD/C,EAAYwB,QArG7DrC,EAAqByD,SAASG,GAMjC3D,GAAwB,SAAC4D,GAAD,OACtBA,EAAajD,QAAO,SAACyB,GAAD,OAAQA,IAAOuB,QANrC3D,GAAwB,SAAC4D,GAAD,4BACnBA,GADmB,CAEtBD,QAP6B,IAEjCA,GAyGkB7B,MAAOyB,MAGX,eAACR,EAAA,EAAD,WACE,cAAC3F,EAAA,EAAD,CACElC,QAAQ,QACR2I,WAAW,OACX/G,MAAM,eACNQ,cAAY,EACZwG,QAAM,EALR,SAOGlD,EAAYmD,eAEf,cAAC3G,EAAA,EAAD,CAAYlC,QAAQ,QAAQ4B,MAAM,iBAAiBgH,QAAM,EAAzD,SACGE,YAAOpD,EAAYqD,UAAW,qBAGnC,cAAClB,EAAA,EAAD,UACE,cAAC3F,EAAA,EAAD,CACElC,QAAQ,QACR2I,WAAW,OACX/G,MAAM,eACNQ,cAAY,EACZwG,QAAM,EALR,SAOGlD,EAAYsD,YAGjB,eAACnB,EAAA,EAAD,WACE,cAAC3F,EAAA,EAAD,CACElC,QAAQ,QACR2I,WAAW,OACX/G,MAAM,eACNQ,cAAY,EACZwG,QAAM,EALR,SAOGlD,EAAYuD,aAEf,cAAC/G,EAAA,EAAD,CAAYlC,QAAQ,QAAQ4B,MAAM,iBAAiBgH,QAAM,EAAzD,SACGlD,EAAYwD,gBAGjB,eAACrB,EAAA,EAAD,CAAWM,MAAM,QAAjB,UACE,eAACjG,EAAA,EAAD,CACElC,QAAQ,QACR2I,WAAW,OACX/G,MAAM,eACNQ,cAAY,EACZwG,QAAM,EALR,UAOGlD,EAAYyD,aACZzD,EAAY0D,kBAEf,cAAClH,EAAA,EAAD,CAAYlC,QAAQ,QAAQ4B,MAAM,iBAAiBgH,QAAM,EAAzD,SACGS,IAAQ3D,EAAY4D,QAAQR,OAA5B,UACIpD,EAAY6D,SADhB,gBAKL,cAAC1B,EAAA,EAAD,CAAWM,MAAM,QAAjB,SACG9D,GAAeqB,EAAYL,UAE9B,eAACwC,EAAA,EAAD,CAAWM,MAAM,QAAjB,UACE,cAACqB,EAAA,EAAD,CAASjC,MAAM,aAAakC,OAAK,EAAjC,SACE,cAACtG,EAAA,EAAD,CACElD,GAAI,CACF,UAAW,CACTyJ,WAAYrK,EAAMqB,OAAOO,QAAQC,SAEnCU,MAAOvC,EAAM8B,QAAQF,QAAQG,MAE/BQ,MAAM,UACN+H,KAAK,QARP,SAUE,cAAC,IAAD,CAAiBnH,SAAS,cAG9B,cAACgH,EAAA,EAAD,CAASjC,MAAM,eAAekC,OAAK,EAAnC,SACE,cAACtG,EAAA,EAAD,CACElD,GAAI,CACF,UAAW,CAAEyJ,WAAYrK,EAAMqB,OAAOc,MAAMN,SAC5CU,MAAOvC,EAAM8B,QAAQK,MAAMJ,MAE7BQ,MAAM,UACN+H,KAAK,QANP,SAQE,cAAC,IAAD,CAAmBnH,SAAS,mBAhG7BkD,EAAYwB,cA0G7B,cAAC9H,EAAA,EAAD,CAAKkE,EAAG,EAAR,SACE,cAACsG,EAAA,EAAD,CACEzH,UAAU,MACV0H,MAAOrE,EAAqBR,OAC5B8E,aA/LiB,SAAC5B,EAAY6B,GACpC7E,EAAQ6E,IA+LFC,oBA5LkB,SAAC9B,GACzB9C,EAAS6E,SAAS/B,EAAM9H,OAAOwG,SA4LzB3B,KAAMA,EACNiF,YAAa/E,EACbgF,mBAAoB,CAAC,EAAG,GAAI,GAAI,YAW1CxF,GAAkByF,aAAe,CAC/BxF,aAAc,IAGDD,U,UC3NA0F,OA9If,WAEE,IAAMzF,EAA8B,CAClC,CACEsC,GAAI,IACJ2B,aAAc,eACdE,WAAW,IAAIuB,MAAOC,UACtBlF,OAAQ,YACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,QACdG,OAAQ,MACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,eACdE,UAAWyB,aAAQ,IAAIF,KAAQ,GAAGC,UAClClF,OAAQ,YACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,WACdG,OAAQ,QACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,eACdE,UAAWyB,aAAQ,IAAIF,KAAQ,GAAGC,UAClClF,OAAQ,SACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,WACdG,OAAQ,QACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,eACdE,UAAWyB,aAAQ,IAAIF,KAAQ,IAAIC,UACnClF,OAAQ,YACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,WACdG,OAAQ,QACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,eACdE,UAAWyB,aAAQ,IAAIF,KAAQ,IAAIC,UACnClF,OAAQ,UACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,WACdG,OAAQ,QACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,eACdE,UAAWyB,aAAQ,IAAIF,KAAQ,IAAIC,UACnClF,OAAQ,YACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,WACdG,OAAQ,QACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,eACdE,WAAW,IAAIuB,MAAOC,UACtBlF,OAAQ,UACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,SACdG,OAAQ,OACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,kBACdE,UAAWyB,aAAQ,IAAIF,KAAQ,IAAIC,UACnClF,OAAQ,YACR2D,QAAS,eACTC,WAAY,iBACZC,WAAY,WACZC,aAAc,SACdG,OAAQ,MACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,IACJ2B,aAAc,eACdE,UAAWyB,aAAQ,IAAIF,KAAQ,IAAIC,UACnClF,OAAQ,YACR2D,QAAS,eACTC,WAAY,eACZC,WAAY,WACZC,aAAc,aACdG,OAAQ,OACRF,eAAgB,MAChBG,SAAU,KAEZ,CACErC,GAAI,KACJ2B,aAAc,kBACdE,UAAWyB,aAAQ,IAAIF,KAAQ,KAAKC,UACpClF,OAAQ,SACR2D,QAAS,eACTC,WAAY,kBACZC,WAAY,wBACZC,aAAc,SACdG,OAAQ,KACRF,eAAgB,MAChBG,SAAU,MAId,OACE,cAACpD,EAAA,EAAD,UACE,cAAC,GAAD,CAAmBvB,aAAcA,OC3GxB6F,UA3Bf,WACE,OACE,qCACE,cAAC,IAAD,UACE,kEAEF,cAAClK,EAAA,EAAD,UACE,cAAC,EAAD,MAEF,cAACmK,EAAA,EAAD,CAAWlL,SAAS,KAApB,SACE,cAACuC,EAAA,EAAD,CACEC,WAAS,EACT2I,UAAU,MACV5K,eAAe,SACfF,WAAW,UACXP,QAAS,EALX,SAOE,cAACyC,EAAA,EAAD,CAAME,MAAI,EAACtC,GAAI,GAAf,SACE,cAAC,GAAD,UAIN,cAACJ,EAAA,EAAD","file":"static/js/12.5cc15333.chunk.js","sourcesContent":["import { Box, Container, Link, Typography } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst FooterWrapper = styled(Box)(\r\n  ({ theme }) => `\r\n        border-radius: 0;\r\n        margin: ${theme.spacing(3)} 0;\r\n`\r\n);\r\n\r\nfunction Footer() {\r\n  return (\r\n    <FooterWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Box\r\n          py={3}\r\n          display={{ xs: 'block', md: 'flex' }}\r\n          alignItems=\"center\"\r\n          textAlign={{ xs: 'center', md: 'left' }}\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Box>\r\n            <Typography variant=\"subtitle1\">\r\n              &copy; 2022 - Rafael Guimarães\r\n            </Typography>\r\n          </Box>\r\n          <Typography sx={{ pt: { xs: 2, md: 0 } }} variant=\"subtitle1\">\r\n            Created by <Link href=\"https://rafaelgcs.com\" target=\"_blank\" rel=\"noopener noreferrer\">Rafael GCS</Link> Using <Link href=\"https://material-ui.com/store/items/tokyo-react-admin-dashboard/\" target=\"_blank\" rel=\"noopener noreferrer\">Tokyo Free Black</Link>\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </FooterWrapper>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { FC, ReactNode } from 'react';\r\nimport { Container } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(4, 0)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <>\r\n      <PageTitle>\r\n        <Container maxWidth=\"lg\">\r\n          {children}\r\n        </Container>\r\n      </PageTitle>\r\n    </>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\n\r\ninterface LabelProps {\r\n  className?: string;\r\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success' | 'info';\r\n  children?: ReactNode;\r\n}\r\n\r\nconst LabelWrapper = styled('span')(\r\n  ({ theme }) => `\r\n      background-color: ${theme.colors.alpha.black[5]};\r\n      padding: ${theme.spacing(0.5, 1)};\r\n      font-size: ${theme.typography.pxToRem(13)};\r\n      border-radius: ${theme.general.borderRadius};\r\n      display: inline-flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      max-height: ${theme.spacing(3)};\r\n      \r\n      &.MuiLabel {\r\n        &-primary {\r\n          background-color: ${theme.colors.primary.lighter};\r\n          color: ${theme.palette.primary.main}\r\n        }\r\n        \r\n        &-secondary {\r\n          background-color: ${theme.colors.secondary.lighter};\r\n          color: ${theme.palette.secondary.main}\r\n        }\r\n        \r\n        &-success {\r\n          background-color: ${theme.colors.success.lighter};\r\n          color: ${theme.palette.success.main}\r\n        }\r\n        \r\n        &-warning {\r\n          background-color: ${theme.colors.warning.lighter};\r\n          color: ${theme.palette.warning.main}\r\n        }\r\n              \r\n        &-error {\r\n          background-color: ${theme.colors.error.lighter};\r\n          color: ${theme.palette.error.main}\r\n        }\r\n        \r\n        &-info {\r\n          background-color: ${theme.colors.info.lighter};\r\n          color: ${theme.palette.info.main}\r\n        }\r\n      }\r\n`\r\n);\r\n\r\nconst Label: FC<LabelProps> = ({\r\n  className = '',\r\n  color = 'secondary',\r\n  children,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\r\n      {children}\r\n    </LabelWrapper>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'error',\r\n    'warning',\r\n    'success',\r\n    'info'\r\n  ])\r\n};\r\n\r\nexport default Label;\r\n","import { Typography, Button, Grid } from '@mui/material';\r\n\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\n\r\nfunction PageHeader() {\r\n\r\n  const user =\r\n  {\r\n    name: 'Catherine Pike',\r\n    avatar: '/static/images/avatars/1.jpg'\r\n  };\r\n  return (\r\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Grid item>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          Transactions\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\">\r\n          {user.name}, these are your recent transactions\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          sx={{ mt: { xs: 2, md: 0 } }}\r\n          variant=\"contained\"\r\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\r\n        >\r\n          Create transaction\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","import { useState, useRef } from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Menu,\r\n  IconButton,\r\n  Button,\r\n  ListItemText,\r\n  ListItem,\r\n  List,\r\n  Typography\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\n\r\nconst ButtonError = styled(Button)(\r\n  ({ theme }) => `\r\n     background: ${theme.colors.error.main};\r\n     color: ${theme.palette.error.contrastText};\r\n\r\n     &:hover {\r\n        background: ${theme.colors.error.dark};\r\n     }\r\n    `\r\n);\r\n\r\nfunction BulkActions() {\r\n  const [onMenuOpen, menuOpen] = useState<boolean>(false);\r\n  const moreRef = useRef<HTMLButtonElement | null>(null);\r\n\r\n  const openMenu = (): void => {\r\n    menuOpen(true);\r\n  };\r\n\r\n  const closeMenu = (): void => {\r\n    menuOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" color=\"text.secondary\">\r\n            Bulk actions:\r\n          </Typography>\r\n          <ButtonError\r\n            sx={{ ml: 1 }}\r\n            startIcon={<DeleteTwoToneIcon />}\r\n            variant=\"contained\"\r\n          >\r\n            Delete\r\n          </ButtonError>\r\n        </Box>\r\n        <IconButton\r\n          color=\"primary\"\r\n          onClick={openMenu}\r\n          ref={moreRef}\r\n          sx={{ ml: 2, p: 1 }}\r\n        >\r\n          <MoreVertTwoToneIcon />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <Menu\r\n        keepMounted\r\n        anchorEl={moreRef.current}\r\n        open={onMenuOpen}\r\n        onClose={closeMenu}\r\n        anchorOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center'\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center'\r\n        }}\r\n\r\n      >\r\n        <List sx={{ p: 1 }} component=\"nav\">\r\n          <ListItem button>\r\n            <ListItemText primary=\"Bulk delete selected\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Bulk edit selected\" />\r\n          </ListItem>\r\n        </List>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BulkActions;\r\n","import { FC, ChangeEvent, useState } from 'react';\r\nimport { format } from 'date-fns';\r\nimport numeral from 'numeral';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Tooltip,\r\n  Divider,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Card,\r\n  Checkbox,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableContainer,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  useTheme,\r\n  CardHeader\r\n} from '@mui/material';\r\n\r\nimport Label from 'src/components/Label';\r\nimport { CryptoOrder, CryptoOrderStatus } from 'src/models/crypto_order';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport BulkActions from './BulkActions';\r\n\r\ninterface RecentOrdersTableProps {\r\n  className?: string;\r\n  cryptoOrders: CryptoOrder[];\r\n}\r\n\r\ninterface Filters {\r\n  status?: CryptoOrderStatus;\r\n}\r\n\r\nconst getStatusLabel = (cryptoOrderStatus: CryptoOrderStatus): JSX.Element => {\r\n  const map = {\r\n    failed: {\r\n      text: 'Failed',\r\n      color: 'error'\r\n    },\r\n    completed: {\r\n      text: 'Completed',\r\n      color: 'success'\r\n    },\r\n    pending: {\r\n      text: 'Pending',\r\n      color: 'warning'\r\n    }\r\n  };\r\n\r\n  const { text, color }: any = map[cryptoOrderStatus];\r\n\r\n  return <Label color={color}>{text}</Label>;\r\n};\r\n\r\nconst applyFilters = (\r\n  cryptoOrders: CryptoOrder[],\r\n  filters: Filters\r\n): CryptoOrder[] => {\r\n  return cryptoOrders.filter((cryptoOrder) => {\r\n    let matches = true;\r\n\r\n    if (filters.status && cryptoOrder.status !== filters.status) {\r\n      matches = false;\r\n    }\r\n\r\n    return matches;\r\n  });\r\n};\r\n\r\nconst applyPagination = (\r\n  cryptoOrders: CryptoOrder[],\r\n  page: number,\r\n  limit: number\r\n): CryptoOrder[] => {\r\n  return cryptoOrders.slice(page * limit, page * limit + limit);\r\n};\r\n\r\nconst RecentOrdersTable: FC<RecentOrdersTableProps> = ({ cryptoOrders }) => {\r\n\r\n  const [selectedCryptoOrders, setSelectedCryptoOrders] = useState<string[]>(\r\n    []\r\n  );\r\n  const selectedBulkActions = selectedCryptoOrders.length > 0;\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(5);\r\n  const [filters, setFilters] = useState<Filters>({\r\n    status: null\r\n  });\r\n\r\n  const statusOptions = [\r\n    {\r\n      id: 'all',\r\n      name: 'All'\r\n    },\r\n    {\r\n      id: 'completed',\r\n      name: 'Completed'\r\n    },\r\n    {\r\n      id: 'pending',\r\n      name: 'Pending'\r\n    },\r\n    {\r\n      id: 'failed',\r\n      name: 'Failed'\r\n    }\r\n  ];\r\n\r\n  const handleStatusChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n    let value = null;\r\n\r\n    if (e.target.value !== 'all') {\r\n      value = e.target.value;\r\n    }\r\n\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      status: value\r\n    }));\r\n  };\r\n\r\n  const handleSelectAllCryptoOrders = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    setSelectedCryptoOrders(\r\n      event.target.checked\r\n        ? cryptoOrders.map((cryptoOrder) => cryptoOrder.id)\r\n        : []\r\n    );\r\n  };\r\n\r\n  const handleSelectOneCryptoOrder = (\r\n    event: ChangeEvent<HTMLInputElement>,\r\n    cryptoOrderId: string\r\n  ): void => {\r\n    if (!selectedCryptoOrders.includes(cryptoOrderId)) {\r\n      setSelectedCryptoOrders((prevSelected) => [\r\n        ...prevSelected,\r\n        cryptoOrderId\r\n      ]);\r\n    } else {\r\n      setSelectedCryptoOrders((prevSelected) =>\r\n        prevSelected.filter((id) => id !== cryptoOrderId)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n  };\r\n\r\n  const filteredCryptoOrders = applyFilters(cryptoOrders, filters);\r\n  const paginatedCryptoOrders = applyPagination(\r\n    filteredCryptoOrders,\r\n    page,\r\n    limit\r\n  );\r\n  const selectedSomeCryptoOrders =\r\n    selectedCryptoOrders.length > 0 &&\r\n    selectedCryptoOrders.length < cryptoOrders.length;\r\n  const selectedAllCryptoOrders =\r\n    selectedCryptoOrders.length === cryptoOrders.length;\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card>\r\n      {selectedBulkActions && (\r\n        <Box flex={1} p={2}>\r\n          <BulkActions />\r\n        </Box>\r\n      )}\r\n      {!selectedBulkActions && (\r\n        <CardHeader\r\n          action={\r\n            <Box width={150}>\r\n              <FormControl fullWidth variant=\"outlined\">\r\n                <InputLabel>Status</InputLabel>\r\n                <Select\r\n                  value={filters.status || 'all'}\r\n                  onChange={handleStatusChange}\r\n                  label=\"Status\"\r\n                  autoWidth\r\n                >\r\n                  {statusOptions.map((statusOption) => (\r\n                    <MenuItem key={statusOption.id} value={statusOption.id}>\r\n                      {statusOption.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          }\r\n          title=\"Recent Orders\"\r\n        />\r\n      )}\r\n      <Divider />\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\">\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  checked={selectedAllCryptoOrders}\r\n                  indeterminate={selectedSomeCryptoOrders}\r\n                  onChange={handleSelectAllCryptoOrders}\r\n                />\r\n              </TableCell>\r\n              <TableCell>Order Details</TableCell>\r\n              <TableCell>Order ID</TableCell>\r\n              <TableCell>Source</TableCell>\r\n              <TableCell align=\"right\">Amount</TableCell>\r\n              <TableCell align=\"right\">Status</TableCell>\r\n              <TableCell align=\"right\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {paginatedCryptoOrders.map((cryptoOrder) => {\r\n              const isCryptoOrderSelected = selectedCryptoOrders.includes(\r\n                cryptoOrder.id\r\n              );\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  key={cryptoOrder.id}\r\n                  selected={isCryptoOrderSelected}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={isCryptoOrderSelected}\r\n                      onChange={(event: ChangeEvent<HTMLInputElement>) =>\r\n                        handleSelectOneCryptoOrder(event, cryptoOrder.id)\r\n                      }\r\n                      value={isCryptoOrderSelected}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {cryptoOrder.orderDetails}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\r\n                      {format(cryptoOrder.orderDate, 'MMMM dd yyyy')}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {cryptoOrder.orderID}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {cryptoOrder.sourceName}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\r\n                      {cryptoOrder.sourceDesc}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {cryptoOrder.amountCrypto}\r\n                      {cryptoOrder.cryptoCurrency}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\r\n                      {numeral(cryptoOrder.amount).format(\r\n                        `${cryptoOrder.currency}0,0.00`\r\n                      )}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {getStatusLabel(cryptoOrder.status)}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <Tooltip title=\"Edit Order\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': {\r\n                            background: theme.colors.primary.lighter\r\n                          },\r\n                          color: theme.palette.primary.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                      >\r\n                        <EditTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Delete Order\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': { background: theme.colors.error.lighter },\r\n                          color: theme.palette.error.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                      >\r\n                        <DeleteTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Box p={2}>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={filteredCryptoOrders.length}\r\n          onPageChange={handlePageChange}\r\n          onRowsPerPageChange={handleLimitChange}\r\n          page={page}\r\n          rowsPerPage={limit}\r\n          rowsPerPageOptions={[5, 10, 25, 30]}\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRecentOrdersTable.propTypes = {\r\n  cryptoOrders: PropTypes.array.isRequired\r\n};\r\n\r\nRecentOrdersTable.defaultProps = {\r\n  cryptoOrders: []\r\n};\r\n\r\nexport default RecentOrdersTable;\r\n","import { Card } from '@mui/material';\r\nimport { CryptoOrder } from 'src/models/crypto_order';\r\nimport RecentOrdersTable from './RecentOrdersTable';\r\nimport { subDays } from 'date-fns';\r\n\r\nfunction RecentOrders() {\r\n\r\n  const cryptoOrders: CryptoOrder[] = [\r\n    {\r\n      id: '1',\r\n      orderDetails: 'Fiat Deposit',\r\n      orderDate: new Date().getTime(),\r\n      status: 'completed',\r\n      orderID: 'VUVX709ET7BY',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 1111',\r\n      amountCrypto: 34.4565,\r\n      amount: 56787,\r\n      cryptoCurrency: 'ETH',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '2',\r\n      orderDetails: 'Fiat Deposit',\r\n      orderDate: subDays(new Date(), 1).getTime(),\r\n      status: 'completed',\r\n      orderID: '23M3UOG65G8K',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 1111',\r\n      amountCrypto: 6.58454334,\r\n      amount: 8734587,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '3',\r\n      orderDetails: 'Fiat Deposit',\r\n      orderDate: subDays(new Date(), 5).getTime(),\r\n      status: 'failed',\r\n      orderID: 'F6JHK65MS818',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 1111',\r\n      amountCrypto: 6.58454334,\r\n      amount: 8734587,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '4',\r\n      orderDetails: 'Fiat Deposit',\r\n      orderDate: subDays(new Date(), 55).getTime(),\r\n      status: 'completed',\r\n      orderID: 'QJFAI7N84LGM',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 1111',\r\n      amountCrypto: 6.58454334,\r\n      amount: 8734587,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '5',\r\n      orderDetails: 'Fiat Deposit',\r\n      orderDate: subDays(new Date(), 56).getTime(),\r\n      status: 'pending',\r\n      orderID: 'BO5KFSYGC0YW',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 1111',\r\n      amountCrypto: 6.58454334,\r\n      amount: 8734587,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '6',\r\n      orderDetails: 'Fiat Deposit',\r\n      orderDate: subDays(new Date(), 33).getTime(),\r\n      status: 'completed',\r\n      orderID: '6RS606CBMKVQ',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 1111',\r\n      amountCrypto: 6.58454334,\r\n      amount: 8734587,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '7',\r\n      orderDetails: 'Fiat Deposit',\r\n      orderDate: new Date().getTime(),\r\n      status: 'pending',\r\n      orderID: '479KUYHOBMJS',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 1212',\r\n      amountCrypto: 2.346546,\r\n      amount: 234234,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '8',\r\n      orderDetails: 'Paypal Withdraw',\r\n      orderDate: subDays(new Date(), 22).getTime(),\r\n      status: 'completed',\r\n      orderID: 'W67CFZNT71KR',\r\n      sourceName: 'Paypal Account',\r\n      sourceDesc: '*** 1111',\r\n      amountCrypto: 3.345456,\r\n      amount: 34544,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '9',\r\n      orderDetails: 'Fiat Deposit',\r\n      orderDate: subDays(new Date(), 11).getTime(),\r\n      status: 'completed',\r\n      orderID: '63GJ5DJFKS4H',\r\n      sourceName: 'Bank Account',\r\n      sourceDesc: '*** 2222',\r\n      amountCrypto: 1.4389567945,\r\n      amount: 123843,\r\n      cryptoCurrency: 'BTC',\r\n      currency: '$'\r\n    },\r\n    {\r\n      id: '10',\r\n      orderDetails: 'Wallet Transfer',\r\n      orderDate: subDays(new Date(), 123).getTime(),\r\n      status: 'failed',\r\n      orderID: '17KRZHY8T05M',\r\n      sourceName: 'Wallet Transfer',\r\n      sourceDesc: \"John's Cardano Wallet\",\r\n      amountCrypto: 765.5695,\r\n      amount: 7567,\r\n      cryptoCurrency: 'ADA',\r\n      currency: '$'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n      <RecentOrdersTable cryptoOrders={cryptoOrders} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default RecentOrders;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageHeader from './PageHeader';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport { Grid, Container } from '@mui/material';\r\nimport Footer from 'src/components/Footer';\r\n\r\nimport RecentOrders from './RecentOrders';\r\n\r\nfunction ApplicationsTransactions() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Transactions - Applications</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <PageHeader />\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <RecentOrders />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ApplicationsTransactions;\r\n"],"sourceRoot":""}