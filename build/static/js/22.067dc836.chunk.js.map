{"version":3,"sources":["components/@material-extend/MHidden.js","layouts/AuthLayout/index.tsx","services/api.tsx","repositories/panel/users.ts","components/authentication/login/LoginForm.tsx","components/authentication/AuthSocial.tsx","content/panel/auth_pages/Login/index.tsx"],"names":["MHidden","width","children","breakpoint","substring","hiddenUp","useMediaQuery","theme","breakpoints","up","hiddenDown","down","includes","propTypes","PropTypes","node","oneOf","isRequired","HeaderStyle","styled","top","zIndex","lineHeight","display","alignItems","position","padding","spacing","justifyContent","AuthLayout","to","Logo","Typography","variant","sx","mt","md","panelUrl","process","REACT_APP_PANEL_URL_API","panelApi","axios","create","baseURL","headers","Accept","userLogin","Authorization","panel","panelGetToken","a","email","password","remember","data","post","response","status","res","console","log","success","panelAuth","panelLocalLogin","user","api_token","logged","error","LoginForm","navigate","useNavigate","useState","showPassword","setShowPassword","LoginSchema","Yup","shape","required","doLogin","setSubmiting","formik","useFormik","initialValues","validationSchema","onSubmit","func","setSubmitting","errors","touched","values","isSubmitting","handleSubmit","getFieldProps","authPanel","panelIsAuthenticated","value","autoComplete","noValidate","Stack","TextField","fullWidth","type","label","Boolean","helperText","InputProps","endAdornment","InputAdornment","IconButton","onClick","show","edge","icon","eyeFill","eyeOffFill","direction","my","FormControlLabel","control","Checkbox","checked","Link","component","RouterLink","LoadingButton","size","loading","AuthSocial","Button","color","googleFill","height","facebookFill","twitterFill","Divider","RootStyle","React","Fragment","ContentStyle","maxWidth","margin","minHeight","flexDirection","Login","underline","Container","mb","gutterBottom","align"],"mappings":"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","file":"static/js/22.067dc836.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n// material\r\nimport { useMediaQuery } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nMHidden.propTypes = {\r\n  children: PropTypes.node,\r\n  width: PropTypes.oneOf([\r\n    'xsDown',\r\n    'smDown',\r\n    'mdDown',\r\n    'lgDown',\r\n    'xlDown',\r\n    'xsUp',\r\n    'smUp',\r\n    'mdUp',\r\n    'lgUp',\r\n    'xlUp'\r\n  ]).isRequired\r\n};\r\n\r\nexport default function MHidden({ width, children }) {\r\n  const breakpoint = width.substring(0, 2);\r\n\r\n  const hiddenUp = useMediaQuery((theme) => theme.breakpoints.up(breakpoint));\r\n  const hiddenDown = useMediaQuery((theme) => theme.breakpoints.down(breakpoint));\r\n\r\n  if (width.includes('Down')) {\r\n    return hiddenDown ? null : children;\r\n  }\r\n\r\n  if (width.includes('Up')) {\r\n    return hiddenUp ? null : children;\r\n  }\r\n\r\n  return null;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Typography } from '@mui/material';\r\n// components\r\nimport Logo from '../../components/Logo';\r\n//\r\nimport { MHidden } from '../../components/@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst HeaderStyle = styled('header')(({ theme }) => ({\r\n  top: 0,\r\n  zIndex: 9,\r\n  lineHeight: 0,\r\n  width: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  position: 'absolute',\r\n  padding: theme.spacing(3),\r\n  justifyContent: 'space-between',\r\n  [theme.breakpoints.up('md')]: {\r\n    alignItems: 'flex-start',\r\n    padding: theme.spacing(7, 5, 0, 7)\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAuthLayout.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default function AuthLayout({ children }) {\r\n  return (\r\n    <HeaderStyle>\r\n      <RouterLink to=\"/\">\r\n        <Logo />\r\n      </RouterLink>\r\n\r\n      <MHidden width=\"smDown\">\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            mt: { md: -2 }\r\n          }}\r\n        >\r\n          {children}\r\n        </Typography>\r\n      </MHidden>\r\n    </HeaderStyle>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nimport { panel } from './auth';\r\n\r\nconst panelUrl = process.env.REACT_APP_PANEL_URL_API;\r\n\r\nconst panelApi = axios.create({\r\n  baseURL: panelUrl,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    Accept: 'application/json'\r\n  }\r\n});\r\n\r\nconst panelAuthApi = axios.create({\r\n  baseURL: panelUrl,\r\n  headers: {\r\n    Authorization: `Bearer ${panel.panelGetToken()}`,\r\n    'Content-Type': 'application/json',\r\n    Accept: '/'\r\n  }\r\n});\r\n\r\n// const url = process.env.REACT_APP_URL_API_LOCAL;\r\n\r\n// const api = axios.create({\r\n//     baseURL: url,\r\n//     headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         Accept: \"application/json\",\r\n//     },\r\n// });\r\n\r\n// const apiAuth = axios.create({\r\n//     baseURL: url,\r\n//     headers: {\r\n//         Authorization: `Bearer ${getToken()}`,\r\n//         \"Content-Type\": \"application/json\",\r\n//         Accept: \"/\",\r\n//     },\r\n// });\r\n\r\nexport { panelApi, panelAuthApi };\r\n","import { panelApi } from '../../services/api';\r\nimport { panel as panelAuth } from '../../services/auth';\r\n\r\nconst userLogin = async ({ email, password, remember }) => {\r\n  let data = {\r\n    email,\r\n    password\r\n  };\r\n  try {\r\n    let response = await panelApi.post('/panel/auth/login/', data);\r\n\r\n    if (response.status === 200 || response.status === 201) {\r\n      let res = response.data;\r\n      console.log(res);\r\n\r\n      if (res.success) {\r\n        let logged = await panelAuth.panelLocalLogin(\r\n          res.data.user,\r\n          res.data.api_token,\r\n          remember ? 'true' : 'false'\r\n        );\r\n\r\n        return {\r\n          success: logged,\r\n          error: 'Login Succefully'\r\n        };\r\n      }\r\n\r\n      return { success: false, error: \"Don't found this user\" };\r\n    }\r\n\r\n    return { success: false, error: 'Email or password wrong' };\r\n  } catch (_) {\r\n      return { success: false, error: 'Request Failed'};\r\n  }\r\n};\r\n\r\nexport { userLogin };\r\n","import * as Yup from 'yup';\r\nimport { useState } from 'react';\r\nimport { Link as RouterLink, useNavigate, Navigate } from 'react-router-dom';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport { Icon } from '@iconify/react';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\n// material\r\nimport {\r\n  Link,\r\n  Stack,\r\n  Checkbox,\r\n  TextField,\r\n  IconButton,\r\n  InputAdornment,\r\n  FormControlLabel\r\n} from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { userLogin } from '../../../repositories/panel/users';\r\nimport { panel as authPanel } from 'src/services/auth';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LoginForm() {\r\n  const navigate = useNavigate();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email('Email must be a valid email address')\r\n      .required('Email is required'),\r\n    password: Yup.string().required('Password is required')\r\n  });\r\n\r\n  const doLogin = async (data, setSubmiting) => {\r\n    let response = await userLogin(data);\r\n\r\n    if (response.success) {\r\n      navigate('/panel');\r\n    }\r\n\r\n    setSubmiting(false);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      remember: true\r\n    },\r\n    validationSchema: LoginSchema,\r\n    onSubmit: (data, func) => {\r\n      doLogin(data, func.setSubmitting);\r\n    }\r\n  });\r\n\r\n  const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } =\r\n    formik;\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword((show) => !show);\r\n  };\r\n\r\n  return authPanel.panelIsAuthenticated() ? (\r\n    <Navigate to=\"/panel\" />\r\n  ) : (\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Stack spacing={3}>\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"username\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            {...getFieldProps('email')}\r\n            error={Boolean(touched.email && errors.email)}\r\n            helperText={touched.email && errors.email}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"current-password\"\r\n            type={showPassword ? 'text' : 'password'}\r\n            label=\"Password\"\r\n            {...getFieldProps('password')}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={handleShowPassword} edge=\"end\">\r\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            error={Boolean(touched.password && errors.password)}\r\n            helperText={touched.password && errors.password}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          sx={{ my: 2 }}\r\n        >\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                {...getFieldProps('remember')}\r\n                checked={values.remember}\r\n              />\r\n            }\r\n            label=\"Remember me\"\r\n          />\r\n\r\n          <Link component={RouterLink} variant=\"subtitle2\" to=\"#\">\r\n            Forgot password?\r\n          </Link>\r\n        </Stack>\r\n\r\n        <LoadingButton\r\n          fullWidth\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          loading={isSubmitting}\r\n        >\r\n          Login\r\n        </LoadingButton>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport googleFill from '@iconify/icons-eva/google-fill';\r\nimport twitterFill from '@iconify/icons-eva/twitter-fill';\r\nimport facebookFill from '@iconify/icons-eva/facebook-fill';\r\n// material\r\nimport { Stack, Button, Divider, Typography } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AuthSocial() {\r\n  return (\r\n    <>\r\n      <Stack direction=\"row\" spacing={2}>\r\n        <Button fullWidth size=\"large\" color=\"inherit\" variant=\"outlined\">\r\n          <Icon icon={googleFill} color=\"#DF3E30\" height={24} />\r\n        </Button>\r\n\r\n        <Button fullWidth size=\"large\" color=\"inherit\" variant=\"outlined\">\r\n          <Icon icon={facebookFill} color=\"#1877F2\" height={24} />\r\n        </Button>\r\n\r\n        <Button fullWidth size=\"large\" color=\"inherit\" variant=\"outlined\">\r\n          <Icon icon={twitterFill} color=\"#1C9CEA\" height={24} />\r\n        </Button>\r\n      </Stack>\r\n\r\n      <Divider sx={{ my: 3 }}>\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n          OR\r\n        </Typography>\r\n      </Divider>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Stack, Link, Container, Typography } from '@mui/material';\r\n// layouts\r\nimport AuthLayout from '../../../../layouts/AuthLayout';\r\n// components\r\n// import Page from '../../../../components/Page';\r\nimport { MHidden } from '../../../../components/@material-extend';\r\nimport { LoginForm } from '../../../../components/authentication/login';\r\nimport AuthSocial from '../../../../components/authentication/AuthSocial';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(React.Fragment)(({ theme }) => ({\r\n  [theme.breakpoints.up('md')]: {\r\n    display: 'flex'\r\n  }\r\n}));\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  maxWidth: 480,\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  minHeight: '100vh',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(12, 0)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Login() {\r\n  return (\r\n    <RootStyle>\r\n      <AuthLayout>\r\n        Don’t have an account? &nbsp;\r\n        <Link\r\n          underline=\"none\"\r\n          variant=\"subtitle2\"\r\n          component={RouterLink}\r\n          to=\"/register\"\r\n        >\r\n          Get started\r\n        </Link>\r\n      </AuthLayout>\r\n      <Container maxWidth=\"sm\">\r\n        <ContentStyle>\r\n          <Stack sx={{ mb: 5 }}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Sign in to Rafael's Panel\r\n            </Typography>\r\n            <Typography sx={{ color: 'text.secondary' }}>\r\n              Enter your details below.\r\n            </Typography>\r\n          </Stack>\r\n          <AuthSocial />\r\n\r\n          <LoginForm />\r\n\r\n          <MHidden width=\"smUp\">\r\n            <Typography variant=\"body2\" align=\"center\" sx={{ mt: 3 }}>\r\n              Don’t have an account?&nbsp;\r\n              <Link variant=\"subtitle2\" component={RouterLink} to=\"register\">\r\n                Get started\r\n              </Link>\r\n            </Typography>\r\n          </MHidden>\r\n        </ContentStyle>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}