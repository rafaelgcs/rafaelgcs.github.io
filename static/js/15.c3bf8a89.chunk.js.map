{"version":3,"sources":["../node_modules/@mui/icons-material/ArrowForwardTwoTone.js","../node_modules/@mui/icons-material/Menu.js","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","../node_modules/@mui/core/NoSsr/NoSsr.js","../node_modules/@mui/material/SwipeableDrawer/SwipeArea.js","../node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardMediaRoot","styled","name","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","_extends","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","CardMedia","React","inProps","ref","useThemeProps","children","className","component","image","src","style","other","_objectWithoutPropertiesLoose","indexOf","composedStyle","backgroundImage","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","role","undefined","NoSsr","defer","fallback","mountedState","setMountedState","useEnhancedEffect","SwipeAreaRoot","skipSx","theme","position","top","left","bottom","zIndex","drawer","anchor","right","SwipeArea","capitalize","isHorizontal","_excluded2","claimedSwipeInstance","calculateCurrentX","touches","doc","body","offsetWidth","pageX","calculateCurrentY","containerWindow","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","iOS","navigator","test","userAgent","transitionDurationDefault","enter","duration","enteringScreen","exit","leavingScreen","SwipeableDrawer","useTheme","disableBackdropTransition","disableDiscovery","disableSwipeToOpen","hideBackdrop","hysteresis","minFlingVelocity","ModalProps","BackdropProps","onClose","onOpen","PaperProps","SwipeAreaProps","swipeAreaWidth","transitionDuration","variant","ModalPropsProp","maybeSwiping","setMaybeSwiping","swipeInstance","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","current","setPosition","translate","options","mode","changeTransition","anchorRtl","getAnchor","rtlTranslateMultiplier","transform","drawerStyle","webkitTransform","transition","transitions","create","getTransitionProps","easing","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","useEventCallback","nativeEvent","horizontal","changedTouches","ownerDocument","currentTarget","ownerWindow","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","hasNativeHandler","domTreeShapes","start","axisProperties","x","y","some","shape","goingForward","axis","scrollPosition","round","areNotAtStart","areNotAtEnd","computeHasNativeHandler","element","rootNode","parentElement","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","getDomTreeShapes","dx","dy","definitelySwiping","cancelable","preventDefault","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","defaultMuiPrevented","addEventListener","passive","removeEventListener","_jsxs","Drawer","pointerEvents"],"mappings":"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","file":"static/js/15.c3bf8a89.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 4-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8-8-8z\"\n}), 'ArrowForwardTwoTone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\n\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'image' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardMedia;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\n/**\n * NoSsr purposely removes components from the subject of Server Side Rendering (SSR).\n *\n * This component can be useful in a variety of situations:\n * - Escape hatch for broken dependencies not supporting SSR.\n * - Improve the time-to-first paint on the client by only rendering above the fold.\n * - Reduce the rendering time on the server.\n * - Under too heavy server load, you can turn on service degradation.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction NoSsr(props) {\n  const {\n    children,\n    defer = false,\n    fallback = null\n  } = props;\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    if (!defer) {\n      setMountedState(true);\n    }\n  }, [defer]);\n  React.useEffect(() => {\n    if (defer) {\n      setMountedState(true);\n    }\n  }, [defer]); // We need the Fragment here to force react-docgen to recognise NoSsr as a component.\n\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: mountedState ? children : fallback\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? NoSsr.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * If `true`, the component will not only prevent server-side rendering.\n   * It will also defer the rendering of the children into a different screen frame.\n   * @default false\n   */\n  defer: PropTypes.bool,\n\n  /**\n   * The fallback content to display.\n   * @default null\n   */\n  fallback: PropTypes.node\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  NoSsr['propTypes' + ''] = exactProp(NoSsr.propTypes);\n}\n\nexport default NoSsr;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchor\", \"classes\", \"className\", \"width\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SwipeAreaRoot = styled('div', {\n  skipSx: true\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  zIndex: theme.zIndex.drawer - 1\n}, ownerState.anchor === 'left' && {\n  right: 'auto'\n}, ownerState.anchor === 'right' && {\n  left: 'auto',\n  right: 0\n}, ownerState.anchor === 'top' && {\n  bottom: 'auto',\n  right: 0\n}, ownerState.anchor === 'bottom' && {\n  top: 'auto',\n  bottom: 0,\n  right: 0\n}));\n/**\n * @ignore - internal component.\n */\n\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes = {},\n    className,\n    width,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, _extends({\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: _extends({\n      [isHorizontal(anchor) ? 'width' : 'height']: width\n    }, style),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in `px` where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default SwipeArea;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"BackdropProps\"],\n      _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { useThemeProps } from '@mui/system';\nimport { NoSsr } from '@mui/core';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\nimport useEventCallback from '../utils/useEventCallback';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport { duration } from '../styles/createTransitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst UNCERTAINTY_THRESHOLD = 3; // px\n// This is the part of the drawer displayed on touch start.\n\nconst DRAG_STARTED_SIGNAL = 20; // px\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nlet claimedSwipeInstance = null; // Exported for test purposes.\n\nexport function reset() {\n  claimedSwipeInstance = null;\n}\n\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\n\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n\n  while (element && element !== rootNode.parentElement) {\n    const style = ownerWindow(rootNode).getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {// noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\n\n\nfunction computeHasNativeHandler({\n  domTreeShapes,\n  start,\n  current,\n  anchor\n}) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = useTheme();\n\n  const {\n    anchor = 'left',\n    disableBackdropTransition = false,\n    disableDiscovery = false,\n    disableSwipeToOpen = iOS,\n    hideBackdrop,\n    hysteresis = 0.52,\n    minFlingVelocity = 450,\n    ModalProps: {\n      BackdropProps\n    } = {},\n    onClose,\n    onOpen,\n    open,\n    PaperProps = {},\n    SwipeAreaProps,\n    swipeAreaWidth = 20,\n    transitionDuration = transitionDurationDefault,\n    variant = 'temporary'\n  } = props,\n        ModalPropsProp = _objectWithoutPropertiesLoose(props.ModalProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  const calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback((translate, options = {}) => {\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = getAnchor(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    const horizontalSwipe = isHorizontal(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = useEventCallback(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontal = isHorizontal(anchor);\n    let current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, ownerDocument(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, ownerWindow(nativeEvent.currentTarget));\n    }\n\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const handleBodyTouchMove = useEventCallback(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontalSwipe = isHorizontal(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n\n      claimedSwipeInstance = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = useEventCallback(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontalSwipe = isHorizontal(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n\n    if (!open) {\n      if (disableSwipeToOpen || nativeEvent.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart); // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Drawer, _extends({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: _extends({\n        BackdropProps: _extends({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: _extends({}, PaperProps, {\n        style: _extends({\n          pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n        }, PaperProps.style),\n        ref: paperRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/_jsx(NoSsr, {\n      children: /*#__PURE__*/_jsx(SwipeArea, _extends({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;"],"sourceRoot":""}